import nltk
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

nltk.download('punkt')

# Step 1: FAQ Data
faq_data = {
    "What is your return policy?": "Our return policy allows returns within 30 days of purchase.",
    "How can I track my order?": "You can track your order using the tracking number sent to your email.",
    "Do you offer international shipping?": "Yes, we ship to over 50 countries worldwide.",
    "How do I reset my password?": "Click on 'Forgot password' on the login page and follow the steps.",
    "What payment methods do you accept?": "We accept credit cards, debit cards, UPI, and PayPal."
}

# Step 2: Preprocess and Vectorize
questions = list(faq_data.keys())
answers = list(faq_data.values())

vectorizer = TfidfVectorizer()
question_vectors = vectorizer.fit_transform(questions)

# Step 3: Chatbot Function
def chatbot_response(user_input):
    user_vector = vectorizer.transform([user_input])
    similarity_scores = cosine_similarity(user_vector, question_vectors)
    max_index = similarity_scores.argmax()
    max_score = similarity_scores[0][max_index]

    if max_score > 0.3:
        return answers[max_index]
    else:
        return "Sorry, I don't understand that. Can you rephrase?"

# Step 4: Chat Loop
print("ðŸ¤– FAQ Bot: Ask me a question (type 'exit' to quit)")
while True:
    user_input = input("You: ")
    if user_input.lower() == "exit":
        print("FAQ Bot: Goodbye!")
        break
    response = chatbot_response(user_input)
    print("FAQ Bot:", response)
